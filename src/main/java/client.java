
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hailo
 */

public class client extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(client.class.getName());

    /**
     * Creates new form client
     */
    public client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        disconnect = new javax.swing.JButton();
        connectsever = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hienthinoinoidung = new javax.swing.JTextArea();
        disconnectsever = new javax.swing.JButton();
        noidung = new javax.swing.JLabel();
        nhapidsever = new javax.swing.JTextField();
        tinnhan = new javax.swing.JLabel();
        nhapport = new javax.swing.JTextField();
        nhaptinnhan = new javax.swing.JTextField();
        id = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        port = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        disconnect.setText("Tho√°t");
        disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectActionPerformed(evt);
            }
        });

        connectsever.setText("K·∫øt N·ªëi sever");
        connectsever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectseverActionPerformed(evt);
            }
        });

        hienthinoinoidung.setColumns(20);
        hienthinoinoidung.setRows(5);
        hienthinoinoidung.setText("Hi·ªÉn th·ªã tin nh·∫Øn trao ƒë·ªïi\n");
        jScrollPane1.setViewportView(hienthinoinoidung);

        disconnectsever.setText("Tho√°t");
        disconnectsever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectseverActionPerformed(evt);
            }
        });

        noidung.setText("N·ªôi Dung ");

        nhapidsever.setText("Nh·∫≠p id sever");
        nhapidsever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapidseverActionPerformed(evt);
            }
        });

        tinnhan.setText("Nh·∫≠p tin nh·∫Øn ");

        nhapport.setText("Nh·∫≠p port");
        nhapport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapportActionPerformed(evt);
            }
        });

        nhaptinnhan.setText("Nh·∫≠p Tin Nh·∫Øn c·∫ßn G·ª≠i");

        id.setText("Nh·∫≠p id");

        send.setText("G·ª≠i ");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        port.setText("nNh·∫≠p port");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(connectsever)
                        .addGap(153, 153, 153)
                        .addComponent(disconnectsever))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(noidung)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(id)
                                    .addComponent(port))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nhapport)
                                    .addComponent(nhapidsever, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(tinnhan)
                        .addGap(70, 70, 70)
                        .addComponent(nhaptinnhan, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(send)
                        .addGap(215, 215, 215)
                        .addComponent(disconnect)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nhapidsever, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(nhapport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(id)
                        .addGap(18, 18, 18)
                        .addComponent(port)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectsever)
                    .addComponent(disconnectsever))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(noidung)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tinnhan)
                    .addComponent(nhaptinnhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(send)
                    .addComponent(disconnect))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectActionPerformed
 try {
        if (socket != null && !socket.isClosed()) {
            socket.close();
        }
    } catch (IOException ex) {
        // c√≥ th·ªÉ log n·∫øu mu·ªën
    }
    
    // ƒê√≥ng c·ª≠a s·ªï hi·ªán t·∫°i
    this.dispose();
    
 
    
    }//GEN-LAST:event_disconnectActionPerformed

    private void connectseverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectseverActionPerformed
 try {
        String host = nhapidsever.getText().trim();
        int port = Integer.parseInt(nhapport.getText().trim());

        socket = new Socket(host, port);
        hienthinoinoidung.append("‚úÖ ƒê√£ k·∫øt n·ªëi t·ªõi server " + host + ":" + port + "\n");

        reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        writer = new PrintWriter(socket.getOutputStream(), true);

        // Thread nh·∫≠n tin nh·∫Øn t·ª´ server
        clientThread = new Thread(() -> {
            try {
                String msg;
                while ((msg = reader.readLine()) != null) {
                    hienthinoinoidung.append("üì© Server: " + msg + "\n");
                }
            } catch (IOException ex) {
                hienthinoinoidung.append("‚ö† L·ªói khi ƒë·ªçc d·ªØ li·ªáu: " + ex.getMessage() + "\n");
            }
        });
        clientThread.start();

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi: " + ex.getMessage());
    }
 
    }//GEN-LAST:event_connectseverActionPerformed

    private void disconnectseverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectseverActionPerformed
         try {
        if (socket != null && !socket.isClosed()) {
            socket.close();
            hienthinoinoidung.append("üõë ƒê√£ ng·∫Øt k·∫øt n·ªëi server.\n");
        }
    } catch (IOException ex) {
        hienthinoinoidung.append("‚ö† L·ªói ng·∫Øt k·∫øt n·ªëi: " + ex.getMessage() + "\n");
    }
         
    }//GEN-LAST:event_disconnectseverActionPerformed

    private void nhapidseverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapidseverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nhapidseverActionPerformed

    private void nhapportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nhapportActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
       try {
        String msg = nhaptinnhan.getText().trim();
        if (writer != null && !msg.isEmpty()) {
            writer.println(msg);
            hienthinoinoidung.append("üë§ B·∫°n: " + msg + "\n");
            nhaptinnhan.setText(""); // xo√° sau khi g·ª≠i
        }
    } catch (Exception ex) {
        hienthinoinoidung.append("‚ö† L·ªói g·ª≠i tin: " + ex.getMessage() + "\n");
    }
       
    }//GEN-LAST:event_sendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new client().setVisible(true));
    }

    private Socket socket;
private BufferedReader reader;
private PrintWriter writer;
private Thread clientThread;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectsever;
    private javax.swing.JButton disconnect;
    private javax.swing.JButton disconnectsever;
    private javax.swing.JTextArea hienthinoinoidung;
    private javax.swing.JLabel id;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nhapidsever;
    private javax.swing.JTextField nhapport;
    private javax.swing.JTextField nhaptinnhan;
    private javax.swing.JLabel noidung;
    private javax.swing.JLabel port;
    private javax.swing.JButton send;
    private javax.swing.JLabel tinnhan;
    // End of variables declaration//GEN-END:variables
}
