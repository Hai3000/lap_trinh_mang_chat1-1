
import java.awt.List;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hailo
 */
public class sever extends javax.swing.JFrame {

    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(sever.class.getName());

    /**
     * Creates new form sever
     */
    public sever() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        hienthilog = new javax.swing.JTextArea();
        startsever = new javax.swing.JButton();
        Stopsever = new javax.swing.JButton();
        nhapport = new javax.swing.JTextField();
        tinnhan = new javax.swing.JLabel();
        port = new javax.swing.JLabel();
        btnthoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hienthilog.setColumns(20);
        hienthilog.setRows(5);
        jScrollPane2.setViewportView(hienthilog);

        startsever.setText("b·∫≠t sever");
        startsever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startseverActionPerformed(evt);
            }
        });

        Stopsever.setText("D·ª´ng sever");
        Stopsever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopseverActionPerformed(evt);
            }
        });

        nhapport.setText("Nh·∫≠p port ƒë·ªÉ l·∫Øng nghe");

        tinnhan.setText("Tin nh·∫Øn");

        port.setText("Port");

        btnthoat.setText("tho√°t");
        btnthoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(startsever)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Stopsever)
                .addGap(138, 138, 138))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(tinnhan)
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(port)
                        .addGap(115, 115, 115)
                        .addComponent(nhapport, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnthoat)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(tinnhan)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startsever)
                    .addComponent(Stopsever))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhapport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(port))
                .addGap(18, 18, 18)
                .addComponent(btnthoat, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StopseverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopseverActionPerformed
        try {
        if (clientSocket != null && !clientSocket.isClosed()) {
            clientSocket.close();
        }
        if (serverSocket != null && !serverSocket.isClosed()) {
            serverSocket.close();
        }
        hienthilog.append("üõë Server ƒë√£ d·ª´ng.\n");
    } catch (IOException ex) {
        hienthilog.append("‚ö† L·ªói khi d·ª´ng server: " + ex.getMessage() + "\n");
    }
        
    }//GEN-LAST:event_StopseverActionPerformed

    private void startseverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startseverActionPerformed
        try {
        int port = Integer.parseInt(nhapport.getText().trim());
        serverSocket = new ServerSocket(port);
        hienthilog.append("‚úÖ Server ƒë√£ b·∫≠t, l·∫Øng nghe c·ªïng: " + port + "\n");

        // Ch·∫°y server trong thread ri√™ng
        serverThread = new Thread(() -> {
            try {
                clientSocket = serverSocket.accept();
                hienthilog.append("üîó Client ƒë√£ k·∫øt n·ªëi!\n");

                reader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                writer = new PrintWriter(clientSocket.getOutputStream(), true);

                String msg;
                while ((msg = reader.readLine()) != null) {
                    hienthilog.append("üì© Client: " + msg + "\n");
                    // server c√≥ th·ªÉ ph·∫£n h·ªìi l·∫°i client n·∫øu mu·ªën
                    writer.println("Server nh·∫≠n: " + msg);
                }
            } catch (IOException ex) {
                hienthilog.append("‚ö† L·ªói: " + ex.getMessage() + "\n");
            }
        });
        serverThread.start();

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "L·ªói khi b·∫≠t server: " + ex.getMessage());
    }
        
    }//GEN-LAST:event_startseverActionPerformed

    private void btnthoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatActionPerformed
              // ƒê√≥ng c·ª≠a s·ªï hi·ªán t·∫°i
    this.dispose();
    

    }//GEN-LAST:event_btnthoatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new sever().setVisible(true));
    }
private ServerSocket serverSocket;
private Socket clientSocket;
private BufferedReader reader;
private PrintWriter writer;
private Thread serverThread;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Stopsever;
    private javax.swing.JButton btnthoat;
    private javax.swing.JTextArea hienthilog;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nhapport;
    private javax.swing.JLabel port;
    private javax.swing.JButton startsever;
    private javax.swing.JLabel tinnhan;
    // End of variables declaration//GEN-END:variables
}
